name: CI Pipeline

on:
  pull_request:
    branches:
      - '**'

  push:
    branches:
      - main

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run compile

      - name: Docker Build
        run: docker build -t gontreldata .


  docker-build:
    name: Docker Build (only on main)
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Bump minor version and get it
        id: versioning
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          NEW_VERSION=$(npx semver $CURRENT_VERSION -i minor)
          echo "New version: $NEW_VERSION"
          
          # Bump version in package.json
          npm version $NEW_VERSION --no-git-tag-version
          
          # Save version to output
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password | docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY_URI }}

      - name: Build Docker image with new version
        run: |
          docker build -t gontrelapi:${{ steps.versioning.outputs.version }} .

      - name: Tag and push image to ECR
        run: |
          ECR_IMAGE=${{ secrets.ECR_REPOSITORY_URI }}:${{ steps.versioning.outputs.version }}
          docker tag gontrelapi:${{ steps.versioning.outputs.version }} $ECR_IMAGE
          docker push $ECR_IMAGE

      - name: Commit, tag, and push version
        env:
          GH_PAT: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

          # Commit if there are any changes (don't fail if clean)
          git diff --quiet || git commit -am "Bump version to ${{ steps.versioning.outputs.version }}"

          git tag v${{ steps.versioning.outputs.version }}

          REPO_URL="https://x-access-token:${GH_PAT}@github.com/${{ github.repository }}"

          # Push commit and tag explicitly to avoid relying on remote origin
          git push "$REPO_URL" HEAD:staging
          git push "$REPO_URL" v${{ steps.versioning.outputs.version }}
